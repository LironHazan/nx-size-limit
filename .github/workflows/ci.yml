name: CI
on: [ pull_request ]
jobs:
  planning-job:
    name: Handle planning job setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16.10.0
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline

  lint-affected:
    name: Lint affected
    needs: planning-job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16.10.0
      - uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-cache-node-modules-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-node-modules-${{ env.cache-name }}-
            ${{ runner.os }}-build-cache-node-modules-
            ${{ runner.os }}-
      - run: npx nx affected --target=lint --base=origin/main

  build-affected:
    name: Verify affected apps building
    needs: planning-job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
      - uses: actions/cache@v3
        with:
          node-version: 16.10.0
          path: node_modules
          key: ${{ runner.os }}-build-cache-node-modules${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - run: npx nx affected --target=build --base=origin/main

      - run: |
          APPS=( $(ls -1d dist/packages/*/ | xargs -n 1 basename) )
          echo "APPS=$APPS" >> $GITHUB_ENV

        env:
          APPS: ${{ env.APPS }}

      - name: Run size-limit check for each app
        id: size-limit
        run: |
          for app in $APPS; do
            npx nx run $app:size-limit
          done
        env:
          APPS: ${{ env.APPS }}

      - name: Create size limit comment
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            // Get a list of all issues created by the PR opener
            // See: https://octokit.github.io/rest.js/#pagination
            const creator = context.payload.sender.login
            const opts = github.rest.issues.listForRepo.endpoint.merge({
              ...context.issue,
              creator,
              state: 'all'
            })
            const issues = await github.paginate(opts)

            for (const issue of issues) {
              if (issue.number === context.issue.number) {
                continue
              }

              if (issue.pull_request) {
                return // Creator is already a contributor.
              }
            }

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Welcome**, new contributor!

                Please make sure you've read our [contributing guide](CONTRIBUTING.md) and we look forward to reviewing your Pull request shortly âœ¨`
            })


  test-affected:
      name: Run unit tests on affetced projects
      needs: planning-job
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: actions/setup-node@v3
        - uses: actions/cache@v3
          with:
            node-version: 16.10.0
            path: node_modules
            key: ${{ runner.os }}-build-cache-node-modules${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

        - run: npx nx affected --target=test --all

  e2e:
      name: Run e2e
      needs: planning-job
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: actions/setup-node@v3
        - uses: actions/cache@v3
          with:
            node-version: 16.10.0
            path: node_modules
            key: ${{ runner.os }}-build-cache-node-modules${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

        - run: npx nx run nx-size-limit-e2e:e2e


